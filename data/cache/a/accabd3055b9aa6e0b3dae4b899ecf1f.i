a:97:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:3:"SSH";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:19;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"RSA Key Fingerprint";i:1;i:2;i:2;i:19;}i:2;i:19;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:19;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"Run the following command to retrieve your SSH RSA fingerprint";}i:2;i:52;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:114;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:114;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"$ ssh-keygen -lf /path/to/ssh/key";}i:2;i:116;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:149;}i:12;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:36:"
$ ssh-keygen -lf ~/.ssh/id_rsa.pub
";i:1;N;i:2;N;}i:2;i:156;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:156;}i:14;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:202;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"
Add rsa key to authorized_keys";}i:2;i:204;}i:16;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:235;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:237;}i:18;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:56:"
mkdir -p ~/.ssh/
cat <your_key >~/.ssh/authorized_keys
";i:1;N;i:2;N;}i:2;i:244;}i:19;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:310;}i:20;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:52:"How to set up ssh so you aren't asked for a password";i:1;i:2;i:2;i:310;}i:2;i:310;}i:21;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:310;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:310;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:133:"You can create a RSA authentication key to be able to log into a remote site from your account, without having to type your password.";}i:2;i:376;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:509;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:509;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:212:"Note that once you've set this up, if an intruder breaks into your account/site, they are given access to the site you are allowed in without a password, too! For this reason, this should never be done from root.";}i:2;i:511;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:723;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:723;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:299:"Run ssh-keygen(1) on your machine, and just hit enter when asked for a password. 
This will generate both a private and a public key. With older SSH versions, they will be stored in ~/.ssh/identity and ~/.ssh/identity.pub; with newer ones, they will be stored in ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub.";}i:2;i:725;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1024;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1024;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:305:"Next, add the contents of the public key file into ~/.ssh/authorized_keys on the remote site (the file should be mode 600). 
If you are a developer and you want to access debian.org systems with such a key, it's possible to have the developer database propagate your key to all of the debian.org machines.";}i:2;i:1026;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1331;}i:34;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1333;}i:35;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:48:"How To Use Key-Based Security With SSH On Ubuntu";i:1;i:2;i:2;i:1333;}i:2;i:1333;}i:36;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1333;}i:37;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1333;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:275:"SSH stands for “secure shell”, and is a network protocol that allows you to securely send commands to a remote machine. SSH is pretty secure, but it does have one weak link – the password. If someone cracks your SSH password, they can gain control over your SSH server.";}i:2;i:1394;}i:39;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1669;}i:40;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1669;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:424:"A more secure method of SSH logons is to use a public/private key. With a public/private key, you create a matched pair of private and public keys. You keep the private key on your personal machine, while you put the public key on the SSH server to which you wish to connect. When configured in this manner, the SSH server will only allow connections from systems that have a matching private key for one of the public keys.";}i:2;i:1671;}i:42;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2095;}i:43;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2095;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"In this post, we’ll show you how to set up key-based logons for SSH in Ubuntu 12.10 Quantal Quetzal.";}i:2;i:2097;}i:45;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2199;}i:46;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2199;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:330:"First, install OpenSSH server on your server. You can find directions on how to do so here.For the rest of this walkthrough, we’ll assume that you installed the SSH server on a machine with the IP address of 192.168.1.100, and that you intend to connect to that server from a client machine with the IP address of 192.168.1.200.";}i:2;i:2201;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2531;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2531;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"After SSH server has been installed, go to your client machine at 192.168.1.200 and enter this command";}i:2;i:2533;}i:51;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2635;}i:52;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:19:"
ssh-keygen -t dsa
";i:1;N;i:2;N;}i:2;i:2642;}i:53;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2642;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:403:"Press Enter, and the command will save a matched public/private key in the ~/.sshdirectory. Specifically, it creates two files – id_dsa, which is your private key, andid_dsa.pub, which is your public key. It will also ask you to set a passphrase for the use of the key, which is an additional layer of security in case someone gains access to your account. Setting a passphrase is usually a good idea.";}i:2;i:2671;}i:55;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3074;}i:56;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3074;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:383:"After the command is complete, you’ll need to transfer the newly created id_dsa.pubpublic key file to your SSH server at 192.168.1.100. Once you have moved it to your server, copy the file to your user account’s ~/.ssh directory on the server. (If this directory does not already exist, create it with the mkdir command.) Next, change to the~/.ssh directory, and use this command";}i:2;i:3076;}i:58;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3459;}i:59;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:23:"
touch authorized_keys
";i:1;N;i:2;N;}i:2;i:3466;}i:60;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3466;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"This will create a file to store authorized keys in the ~/.ssh directory. Use this command to add your public key to the authorized_keys file";}i:2;i:3499;}i:62;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3640;}i:63;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:35:"
cat id_dsa.pub >> authorized_keys
";i:1;N;i:2;N;}i:2;i:3647;}i:64;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3647;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:"Finally, use the chmod command to make authorized_keys read-only to protect from accidental deletion";}i:2;i:3692;}i:66;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3792;}i:67;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:27:"
chmod 400 authorized_keys
";i:1;N;i:2;N;}i:2;i:3799;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3799;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:223:"Finally, you’ll need to alter your SSH server’s configuration file to mandate key-based logins, otherwise the server will continue to allow password-based login. Use the vi editor to edit SSH’s main configuration file";}i:2;i:3836;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4059;}i:71;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:30:"
sudo vi /etc/ssh/sshd_config
";i:1;N;i:2;N;}i:2;i:4066;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4066;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:238:"Once editing the file, make sure the PasswordAuthentication directive is set to no. This will force your SSH server to only allow key-based login attempts. Once you’ve finished editing the file, restart your SSH server with this command";}i:2;i:4106;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4344;}i:75;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:26:"
sudo service ssh restart
";i:1;N;i:2;N;}i:2;i:4351;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4351;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:209:"Your SSH server will not only permit key-based logons – users must have a private key that matches with a corresponding public key in their ~/.ssh/authorized_keys file in their home folder on the SSH server.";}i:2;i:4387;}i:78;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4596;}i:79;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4596;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"Make sure to back up your private key in a safe place – if you lose it, you will lose access to the SSH server.";}i:2;i:4598;}i:81;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4711;}i:82;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4711;}i:83;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4713;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"Links";}i:2;i:4715;}i:85;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4720;}i:86;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4722;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4722;}i:88;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:40:"http://www.noah.org/wiki/SSH_public_keys";i:1;N;}i:2;i:4724;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4764;}i:90;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:4765;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:4767;}i:92;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:45:"http://www.jonathanmoeller.com/screed/?p=3993";i:1;N;}i:2;i:4768;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:4813;}i:94;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4813;}i:95;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4813;}i:96;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4813;}}