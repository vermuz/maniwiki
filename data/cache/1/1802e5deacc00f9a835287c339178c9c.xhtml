
<h1 class="sectionedit1" id="altering_the_database">Altering the database</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Altering the database" [1-37] -->
<h1 class="sectionedit2" id="moddev-alter-files-start">moddev-alter-files-start</h1>
<div class="level1">

</div>
<!-- EDIT2 SECTION "moddev-alter-files-start" [38-77] -->
<h2 class="sectionedit3" id="demo2info">demo2.info</h2>
<div class="level2">
<pre class="code">name = Demo 2
description = Just a Demo module.
core = 7.x</pre>

</div>
<!-- EDIT3 SECTION "demo2.info" [78-174] -->
<h2 class="sectionedit4" id="demo2install">demo2.install</h2>
<div class="level2">
<pre class="code">&lt;?php

/*
 *Implement hook_schema().
 */
function demo2_schema() {
  $schema = array();
  $schema[&#039;demo2&#039;] = array(
    &#039;description&#039; =&gt; &#039;Information about node views.&#039;,
    &#039;fields&#039; =&gt; array(
      &#039;nid&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &quot;The node&#039;s {node}.nid.&quot;,
      ),
      &#039;uid&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &quot;The user&#039;s {uid}.uid.&quot;,
      ),
      &#039;view_count&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &#039;Simple node view counter per user.&#039;,
      ),
    ),
    &#039;primary key&#039; =&gt; array(&#039;nid&#039;, &#039;uid&#039;),
  );

  return $schema;
}

/*
 *Implements hook_update_N().
 */
function demo2_update_7000() {
  drupal_install_schema(&#039;demo2&#039;);
}</pre>

</div>
<!-- EDIT4 SECTION "demo2.install" [175-1167] -->
<h2 class="sectionedit5" id="demo2module">demo2.module</h2>
<div class="level2">
<pre class="code">&lt;?php

/**
 * Implements hook_node_view().
 */
function demo2_node_view($node, $view_mode = &#039;full&#039;) {
  //only when looking at the full version, NOT the teaser
  if ($view_mode == &#039;full&#039;) {

    global $user;

    // Everytime a node is viewed, increment the node_views count
    // in the demo2 table by one and include the result in the node content


    // Get record
    $record = demo2_get_record($node-&gt;nid, $user-&gt;uid);

    //If no record, create one that we can insert later
    if ($record === FALSE) {
      $record = new StdClass();
      $record-&gt;nid = $node-&gt;nid;
      $record-&gt;uid = $user-&gt;uid;
      $record-&gt;view_count = 0;
    }

    // Increment view_count by 1
    $record-&gt;view_count++;


    // Set the record
    demo2_set_record($record);

    krumo($record);


    // Set up an array of placeholders to pass to t().
    $t_args = array(
      &#039;%num&#039; =&gt; $record-&gt;view_count,
    );

    $node-&gt;content[&#039;node_views&#039;] = array(
      &#039;#markup&#039; =&gt; t(&#039;You have viewed this page %num times.&#039;, $t_args),
      &#039;#weight&#039; =&gt; 10,
    );
  }
}


/**
 * Get the record.
 *
 * @param int $nid
 *   The node id.
 * @param int $uid
 *   The user id.
 * @return mixed
 *   The stdClass record, or FALSE if no record exists.
 */

function demo2_get_record($nid, $uid) {
  //SELECT view_count FROM demo2 WHERE nid = $nid &amp; uid = $uid
  $query = db_select(&#039;demo2&#039;, &#039;d&#039;)
    -&gt;fields(&#039;d&#039;, array(&#039;nid&#039;, &#039;uid&#039;, &#039;view_count&#039;))
    -&gt;condition(&#039;nid&#039;, $nid)
    -&gt;condition(&#039;uid&#039;, $uid);
  $record = $query-&gt;execute()-&gt;fetch();
  return $record;

}


/**
 * Save a record.
 *
 * @param stdClass $record
 *   The record to save.
 */
function demo2_set_record($record) {
  //sanity check
  if (!is_object($record)) {
    return watchdog(&#039;demo2&#039;, &#039;We could not update information about node views.&#039;, array(), WATCHDOG_ERROR);
  }


  //INSERT/UPDATE into demo2 (&#039;nid&#039;, &#039;uid&#039;, &#039;node_views&#039;) VALUES (&#039;nid&#039;, &#039;uid&#039;, &#039;node_views&#039;)
  $query = db_merge(&#039;demo2&#039;)
    -&gt;key(array(&#039;nid&#039; =&gt;$record-&gt;nid))
    -&gt;key(array(&#039;uid&#039; =&gt; $record-&gt;uid))
    -&gt;fields((array) $record);
  $query-&gt;execute();

}</pre>

</div>
<!-- EDIT5 SECTION "demo2.module" [1168-3295] -->
<h1 class="sectionedit6" id="moddev-alter-files-end">moddev-alter-files-end</h1>
<div class="level1">

</div>
<!-- EDIT6 SECTION "moddev-alter-files-end" [3296-3333] -->
<h2 class="sectionedit7" id="demo2info1">demo2.info</h2>
<div class="level2">
<pre class="code">name = Demo 2
description = Just a Demo module.
core = 7.x</pre>

</div>
<!-- EDIT7 SECTION "demo2.info" [3334-3430] -->
<h2 class="sectionedit8" id="demo2install1">demo2.install</h2>
<div class="level2">
<pre class="code">&lt;?php

/*
 *Implement hook_schema().
 */
function demo2_schema() {
  $schema = array();
  $schema[&#039;demo2&#039;] = array(
    &#039;description&#039; =&gt; &#039;Information about node views.&#039;,
    &#039;fields&#039; =&gt; array(
      &#039;nid&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &quot;The node&#039;s {node}.nid.&quot;,
      ),
      &#039;uid&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &quot;The user&#039;s {uid}.uid.&quot;,
      ),
      &#039;view_count&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &#039;Simple node view counter per user.&#039;,
      ),      
      &#039;last_viewed&#039; =&gt; array(
        &#039;type&#039; =&gt; &#039;int&#039;,
        &#039;unsigned&#039; =&gt; TRUE,
        &#039;not null&#039; =&gt; TRUE,
        &#039;default&#039; =&gt; 0,
        &#039;description&#039; =&gt; &#039;The last views date (timestamp).&#039;,
      ),
    ),
    &#039;primary key&#039; =&gt; array(&#039;nid&#039;, &#039;uid&#039;),
  );

  return $schema;
}

/*
 *Implements hook_update_N().
 */
function demo2_update_7000() {
  drupal_install_schema(&#039;demo2&#039;);
}



/**
* Implements hook_update_N().
*
* Add the &quot;Last viewed date&quot; field.
*/
function demo2_update_7001() {
  $field = array(
    &#039;type&#039; =&gt; &#039;int&#039;,
    &#039;unsigned&#039; =&gt; TRUE,
    &#039;not null&#039; =&gt; TRUE,
    &#039;default&#039; =&gt; 0,
    &#039;description&#039; =&gt; &quot;The last views date (timestamp).&quot;,    
  );
  db_add_field(&#039;demo2&#039;, &#039;last_viewed&#039;, $field);

  return t(&#039;The &quot;Last Viewed Date&quot; field has been added.&#039;);

}</pre>

</div>
<!-- EDIT8 SECTION "demo2.install" [3431-5028] -->
<h2 class="sectionedit9" id="demo2module1">demo2.module</h2>
<div class="level2">
<pre class="code">&lt;?php

/**
 * Implements hook_node_view().
 */
function demo2_node_view($node, $view_mode = &#039;full&#039;) {
  //only when looking at the full version, NOT the teaser
  if ($view_mode == &#039;full&#039;) {

    global $user;

    // Everytime a node is viewed, increment the node_views count
    // in the demo2 table by one and include the result in the node content

    // Get record
    $record = demo2_get_record($node-&gt;nid, $user-&gt;uid);

    //If no record, create one that we can insert later
    if ($record === FALSE) {
      $record = new StdClass();
      $record-&gt;nid = $node-&gt;nid;
      $record-&gt;uid = $user-&gt;uid;
      $record-&gt;view_count = 0;
      $record-&gt;last_viewed = time();
    }

    // Increment view_count by 1
    $record-&gt;view_count++;

    // Update last_viewed
    $record-&gt;last_viewed = time();


    // Set the record
    demo2_set_record($record);

    #krumo($record);

    // Set up an array of placeholders to pass to t().
    $t_args = array(
      &#039;%num&#039; =&gt; $record-&gt;view_count,
      &#039;%date&#039; =&gt; date(&#039;M j, Y&#039;, $record-&gt;last_viewed),
    );

    $node-&gt;content[&#039;node_views&#039;] = array(
      &#039;#markup&#039; =&gt; t(&#039;You have viewed this page %num times.  It was last viewed by you on %date.&#039;, $t_args),
      &#039;#weight&#039; =&gt; 10,
    );
  }
}


/**
 * Get the record.
 *
 * @param int $nid
 *   The node id.
 * @param int $uid
 *   The user id.
 * @return mixed
 *   The stdClass record, or FALSE if no record exists.
 */

function demo2_get_record($nid, $uid) {
  //SELECT view_count FROM demo2 WHERE nid = $nid &amp; uid = $uid
  $query = db_select(&#039;demo2&#039;, &#039;d&#039;)
    -&gt;fields(&#039;d&#039;, array(&#039;nid&#039;, &#039;uid&#039;, &#039;view_count&#039;, &#039;last_viewed&#039;))
    -&gt;condition(&#039;nid&#039;, $nid)
    -&gt;condition(&#039;uid&#039;, $uid);
  $record = $query-&gt;execute()-&gt;fetch();
  return $record;

}


/**
 * Save a record.
 *
 * @param stdClass $record
 *   The record to save.
 */
function demo2_set_record($record) {
  //sanity check
  if (!is_object($record)) {
    return watchdog(&#039;demo2&#039;, &#039;We could not update information about node views.&#039;, array(), WATCHDOG_ERROR);
  }


  //INSERT/UPDATE into demo2 (&#039;nid&#039;, &#039;uid&#039;, &#039;node_views&#039;) VALUES (&#039;nid&#039;, &#039;uid&#039;, &#039;node_views&#039;)
  $query = db_merge(&#039;demo2&#039;)
    -&gt;key(array(&#039;nid&#039; =&gt;$record-&gt;nid))
    -&gt;key(array(&#039;uid&#039; =&gt; $record-&gt;uid))
    -&gt;fields((array) $record);
  $query-&gt;execute();

}
</pre>

</div>
<!-- EDIT9 SECTION "demo2.module" [5029-] -->