====== Table Sort Example ======

===== tablesort_example.info =====
<code>
   1 name = Table Sort example
   2 description = Demonstrates how to create sortable output in a table.
   3 package = Example modules
   4 core = 7.x
   5 files[] = tablesort_example.test
</code>
===== tablesort_example.install =====
<code>
   1 <?php
   2 
   3 /**
   4  * @file
   5  * Install and uninstall functions for the tablesort example module.
   6  *
   7  * This file contains the functions required to perform install and
   8  * uninstall operations.
   9  *
  10  */
  11 
  12 /**
  13  * Implements hook_install().
  14  *
  15  * @ingroup tablesort_example
  16  */
  17 function tablesort_example_install() {
  18   // let's fill the database with some values for sorting
  19   $rows = array(
  20     array('numbers' => 1, 'alpha' => 'e', 'random' => '912cv21'),
  21     array('numbers' => 2, 'alpha' => 'a', 'random' => '0kuykuh'),
  22     array('numbers' => 3, 'alpha' => 'm', 'random' => 'fuye8734h'),
  23     array('numbers' => 4, 'alpha' => 'w', 'random' => '80jsv772'),
  24     array('numbers' => 5, 'alpha' => 'o', 'random' => 'd82sf-csj'),
  25     array('numbers' => 6, 'alpha' => 's', 'random' => 'au832'),
  26     array('numbers' => 7, 'alpha' => 'e', 'random' => 't982hkv'),
  27   );
  28 
  29   if (db_table_exists('tablesort_example')) {
  30     foreach ($rows as $row) {
  31       db_insert('tablesort_example')->fields($row)->execute();
  32     }
  33   }
  34 }
  35 
  36 /**
  37  * Implements hook_uninstall().
  38  *
  39  * It's good to clean up after ourselves
  40  *
  41  * @ingroup tablesort_example
  42  */
  43 function tablesort_example_uninstall() {
  44   db_drop_table('tablesort_example');
  45 }
  46 
  47 /**
  48  * Implements hook_schema().
  49  *
  50  * @ingroup tablesort_example
  51  */
  52 function tablesort_example_schema() {
  53   $schema['tablesort_example'] = array(
  54     'description' => 'Stores some values for sorting fun.',
  55     'fields' => array(
  56       'numbers'    => array(
  57         'description' => 'This column simply holds numbers values',
  58         'type' => 'varchar',
  59         'length' => 2,
  60         'not null' => TRUE,
  61       ),
  62       'alpha'    => array(
  63         'description' => 'This column simply holds alpha values',
  64         'type' => 'varchar',
  65         'length' => 2,
  66         'not null' => TRUE,
  67       ),
  68       'random' => array(
  69         'description' => 'This column simply holds random values',
  70         'type' => 'varchar',
  71         'length' => 12,
  72         'not null' => TRUE,
  73       ),
  74     ),
  75     'primary key' => array('numbers'),
  76   );
  77 
  78   return $schema;
  79 }
</code>
===== tablesort_example.module =====
<code>
   1 <?php
   2 /**
   3  * @file
   4  * This is an example describing how a module can display data in a sortable
   5  * table
   6  *
   7  * See:
   8  * @link http://drupal.org/node/508796 Extenders @endlink
   9  * @link http://drupal.org/developing/api/database Database API @endlink
  10  */
  11 
  12 /**
  13  * @defgroup tablesort_example Example: Tablesort
  14  * @ingroup examples
  15  * @{
  16  * Example of a sortable table display.
  17  */
  18 
  19 /**
  20  * Implements hook_help().
  21  *
  22  * Show a bit of information about this module on the example page
  23  */
  24 function tablesort_example_help($path, $arg) {
  25   switch ($path) {
  26     case 'examples/tablesort_example':
  27       return '<p>' . t('The layout here is a themed as a table that is sortable by clicking the header name.') . '</p>';
  28   }
  29 }
  30 
  31 /**
  32  * Implements hook_menu().
  33  */
  34 function tablesort_example_menu() {
  35   $items['examples/tablesort_example'] = array(
  36     'title' => 'TableSort example',
  37     'description' => 'Show a page with a sortable table',
  38     'page callback' => 'tablesort_example_page',
  39     'access callback' => TRUE,
  40   );
  41   return $items;
  42 }
  43 
  44 /**
  45  * Build the table render array.
  46  *
  47  * @return
  48  *   A render array set for theming by theme_table().
  49  */
  50 function tablesort_example_page() {
  51   // We are going to output the results in a table with a nice header.
  52   $header = array(
  53     // The header gives the table the information it needs in order to make
  54     // the query calls for ordering. TableSort uses the field information
  55     // to know what database column to sort by.
  56     array('data' => t('Numbers'), 'field' => 't.numbers'),
  57     array('data' => t('Letters'), 'field' => 't.alpha'),
  58     array('data' => t('Mixture'), 'field' => 't.random'),
  59   );
  60 
  61   $query = db_select('tablesort_example', 't')
  62     ->extend('TableSort'); // Using the TableSort Extender is what tells the
  63                            // the query object that we are sorting.
  64   $query->fields('t');
  65 
  66   $result = $query
  67     ->orderByHeader($header) // Don't forget to tell the query object how to
  68                              // find the header information.
  69     ->execute();
  70 
  71   $rows = array();
  72   foreach ($result as $row) {
  73     // normally we would add some nice formatting to our rows
  74     // but for our purpose we are simply going to add our row
  75     // to the array.
  76     $rows[] = array('data' => (array) $row);
  77   }
  78 
  79   // build the table for the nice output.
  80   $build['tablesort_table'] = array(
  81     '#theme' => 'table',
  82     '#header' => $header,
  83     '#rows' => $rows,
  84   );
  85 
  86   return $build;
  87 }
  88 /**
  89  * @} End of "defgroup tablesort_example".
  90  */
</code>
===== tablesort_example.test =====
<code>
   1 <?php
   2 /**
   3  * @file
   4  * Simpletest case for tablesort_example module.
   5  */
   6 
   7 /**
   8  * Functionality tests for the tablesort example module.
   9  *
  10  * @ingroup tablesort_example
  11  */
  12 class TableSortExampleTestCase extends DrupalWebTestCase {
  13 
  14   public static function getInfo() {
  15     return array(
  16       'name' => 'TableSort Example',
  17       'description' => 'Verify the tablesort functionality',
  18       'group' => 'Examples',
  19     );
  20   }
  21 
  22   function setUp() {
  23     // Enable the module.
  24     parent::setUp('tablesort_example');
  25   }
  26 
  27   /**
  28    * Verify the functionality of the example module.
  29    */
  30   function testTableSortPage() {
  31     // no need to login for this test
  32     $this->drupalGet('examples/tablesort_example', array('query' => array('sort' => 'desc', 'order' => 'Numbers')));
  33     $this->assertRaw('<tbody>
  34  <tr class="odd"><td class="active">7</td><td>e</td><td>t982hkv</td> </tr>', 'Ordered by Number decending');
  35 
  36     $this->drupalGet('examples/tablesort_example', array('query' => array('sort' => 'asc', 'order' => 'Numbers')));
  37     $this->assertRaw('<tbody>
  38  <tr class="odd"><td class="active">1</td><td>e</td><td>912cv21</td> </tr>', 'Ordered by Number ascending');
  39 
  40     //Sort by Letters
  41     $this->drupalGet('examples/tablesort_example', array('query' => array('sort' => 'desc', 'order' => 'Letters')));
  42     $this->assertRaw('<tbody>
  43  <tr class="odd"><td>4</td><td class="active">w</td><td>80jsv772</td> </tr>', 'Ordered by Letters decending');
  44 
  45     $this->drupalGet('examples/tablesort_example', array('query' => array('sort' => 'asc', 'order' => 'Letters')));
  46     $this->assertRaw('<tbody>
  47  <tr class="odd"><td>2</td><td class="active">a</td><td>0kuykuh</td> </tr>', 'Ordered by Letters ascending');
  48 
  49     //Sort by Mixture
  50     $this->drupalGet('examples/tablesort_example', array('query' => array('sort' => 'desc', 'order' => 'Mixture')));
  51     $this->assertRaw('<tbody>
  52  <tr class="odd"><td>7</td><td>e</td><td class="active">t982hkv</td> </tr>', 'Ordered by Mixture decending');
  53 
  54     $this->drupalGet('examples/tablesort_example', array('query' => array('sort' => 'asc', 'order' => 'Mixture')));
  55     $this->assertRaw('<tbody>
  56  <tr class="odd"><td>2</td><td>a</td><td class="active">0kuykuh</td> </tr>', 'Ordered by Mixture ascending');
  57   }
  58 }
</code>