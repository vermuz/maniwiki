**Github Procedures**

http://www.vogella.com/articles/Git/article.html

**Useful Commands**

**Install GIT**

<code>
sudo apt-get install git-core 
</code>

**Git settings**

<code>
git config --list 
</code>

**Ignore certain files**

<code>
# Ignore all files ending with ~
*~
# Ignore the target directory
# Matches "target" in any subfolder
target/ 
</code>

**Create directory**

<code>
#Switch to home
cd ~/
# Create a directory
mkdir ~/repo01
# Switch into it
cd repo01
# Create a new directory
mkdir datafiles 
</code>

**Create Git repository**

<code>
# Initialize the Git repository
# for the current directory
git init 
</code>

**Create content**

<code>
# Switch to your new directory
cd ~/repo01
# Create a new directory
mkdir datafiles
# Create a few files
touch test01
touch test02
touch test03
touch datafiles/data.txt
# Put a little text into the first file
ls >test01 
</code>

**Add files to Git index**

<code>
# Add all (files and directories) to the index of the 
# Git repository
git add .
</code>

**Commit to Git repository
**

<code>
# Make a commit of your file to the local repository
git commit -m "Initial commit"

# Show the log file with the commits
git log 
</code>

**See differences since the last commit
**
<code>
# Make some changes to the file
echo "This is a change" > test01
echo "and this is another change" > test02

# Check the changes via the diff command 
git diff

# Commit the changes, -a will commit changes for modified files
# but will not add automatically new files
git commit -a -m "These are new changes" 
</code>

**Procedure**

//Go to to each of the folders you plan on making a repo out of.
//

<code>
git init
</code>

//Add files to it
//
<code>
git add .
git add *
</code>

<code>
git commit -m ' MESSAGE '
</code>

<code>
git log -v
</code>

Go to GITHUB, create a repository

//Add as a remote
//
<code>
git add remote github/origin
</code>

//Push Changes
//
<code>
git push origin master/stable
</code>


**Git Tagging**

Drupal can see tag version info to see if an upgrade is available

Add version to module.info

<code>
git tag 1.02 (Create tag)

git push --tags origin master (Push Tags)

git checkout -b 7.x (Create a new branch on the local system)

git branch (get branch(es))

git push origin 7.x:7.x  (push local 7.x state to remote 7.x)

git branch -d master (Delete master branch)

git push origin :master (push nothing to master to delete it)
</code>

**Deleting Tag
**

<code>
git tag -d 1.02

git push --tags origin 7.x (Push tags)

git status (check status)

git add -p (check what HUNKS are there to add)

              - y

git commit -m "MESSAGE"  

</code>

**Make Changes to work
**

<code>
git pull origin (to see if your state is in sync with remote state)

if all is up-to-date (your box is synced)

git status

git add - p (hunks to add)
  
git commit -m "MESSAGE"

git push origin        master
         ======        ======
         remote        branch
           ||            ||
     <In our case>  <Can be any name> 
           ||
         GITHUB
</code>
